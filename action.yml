name: 'Build Neon Library'
description: 'Build a Neon library.'
inputs:
  working-directory:
    description: 'Working directory to run commands from, relative to repo root.'
    required: false
    default: '.'
  output-directory:
    description: 'Directory to produce the build, relative to working-directory.'
    required: false
    default: 'dist'
  node-version:
    description: 'Node version to install.'
    required: false
    default: ''
  rust-version:
    description: 'Rust version to install.'
    required: false
    default: 'stable'
  registry-url:
    description: 'npm registry URL.'
    required: false
    default: ''
  github-release:
    description: 'Filename or glob to fetch from GitHub releases.'
    required: false
    default: ''
  npm-publish:
    description: 'Publish to npm.'
    required: false
    default: false
  use-cross:
    description: 'Use cross-rs to run the build instead of cargo.'
    required: false
    default: false
  target:
    description: 'Rust target to build for.'
    required: false
    default: ''
branding:
  icon: 'cpu'
  color: 'blue'
runs:
  using: "composite"
  steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Install Node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs['node-version'] }}
        registry-url: ${{ inputs['registry-url'] }}
        cache: npm
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ inputs['rust-version'] }}
        target: ${{ inputs.target }}
        override: true
    - name: Install cross-rs
      if: ${{ inputs['use-cross'] == 'true' }}
      uses: baptiste0928/cargo-install@v2
      with:
        crate: cross
    - name: Install Dependencies
      shell: bash
      run: npm install
      working-directory: ${{ inputs['working-directory'] }}
    - name: Build Target
      if: ${{ inputs['use-cross'] != 'true' && inputs.target != '' }}
      shell: bash
      env:
        CARGO_BUILD_TARGET: ${{ inputs.target }}
      run: npm run build
      working-directory: ${{ inputs['working-directory'] }}
    - name: Build
      if: ${{ inputs['use-cross'] != 'true' && inputs.target == '' }}
      shell: bash
      run: npm run build
      working-directory: ${{ inputs['working-directory'] }}
    - name: Cross
      if: ${{ inputs['use-cross'] == 'true' }}
      env:
        CARGO_BUILD_TARGET: ${{ inputs.target }}
      shell: bash
      run: npm run cross
      working-directory: ${{ inputs['working-directory'] }}
    - name: Pack
      shell: bash
      run: npm run pack-build -- --target ${{ inputs.target }} --out-dir ${{ inputs['output-directory'] }}
      working-directory: ${{ inputs['working-directory'] }}
    - name: Release
      if: ${{ inputs['github-release'] == 'true' }}
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ inputs['working-directory'] }}/${{ inputs['output-directory'] }}/*.tgz
    - name: Publish
      if: ${{ inputs['npm-publish'] == 'true' }}
      shell: bash
      run: npm publish
      working-directory: ${{ inputs['working-directory'] }}
